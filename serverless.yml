service: heroes-data-api

custom:
  LATEST_VERSION: v1
  STAGE: ${opt:stage, 'dev'}
  S3_BUCKET_NAME: istastech.heroesindex.data.${self:custom.STAGE}
  S3_ASSET_BUCKET_NAME: istastech.heroesindex.assets.${self:custom.STAGE}
  S3_WEBSITE_BUCKET_NAME: istastech.heroesindex.com.${self:custom.STAGE}
  VERSION_INDEX_FILE_NAME: index.json
  VERSIONS_FILE_NAME: versions.json

provider:
  name: aws
  runtime: nodejs8.10
  profile: admin
  stage: ${self:custom.STAGE}
  region: us-west-2
  memorySize: 128
  timeout: 30
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:GetObject"
        - "s3:PutObject"
      Resource: arn:aws:s3:::${self:custom.S3_BUCKET_NAME}/*
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
      Resource: arn:aws:s3:::${self:custom.S3_BUCKET_NAME}
  environment:
    STAGE: ${self:provider.stage}
    LATEST_VERSION: ${self:custom.LATEST_VERSION}
    S3_BUCKET_NAME: ${self:custom.S3_BUCKET_NAME}
    S3_ASSET_BUCKET_NAME: ${self:custom.S3_ASSET_BUCKET_NAME}
    S3_DELIMITER: "/"
    VERSION_INDEX_FILE_NAME: ${self:custom.VERSION_INDEX_FILE_NAME}
    VERSIONS_FILE_NAME: ${self:custom.VERSIONS_FILE_NAME}

package:
  include:
    - handler.js
    - src/**
    - docs/**

functions:
  api:
    handler: handler.api
    timeout: 30
    events:
      - http:
          path: "/"
          method: any
          cors: true
      - http:
          path: "/{proxy+}"
          method: any
          cors: true

  updateVersionList:
    handler: handler.updateVersionList
    events:
      - s3:
          bucket: ${self:custom.S3_BUCKET_NAME}
          event: s3:ObjectCreated:*
          rules:
            - suffix: ${self:custom.VERSION_INDEX_FILE_NAME}
      - s3:
          bucket: ${self:custom.S3_BUCKET_NAME}
          event: s3:ObjectRemoved:*
          rules:
            - suffix: ${self:custom.VERSION_INDEX_FILE_NAME}
resources:
  Resources:
    assetBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.S3_ASSET_BUCKET_NAME}
        AccessControl: PublicRead
    websiteBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.S3_WEBSITE_BUCKET_NAME}
        AccessControl: PublicRead
        WebsiteConfiguration:
          ErrorDocument: index.html
          IndexDocument: index.html
